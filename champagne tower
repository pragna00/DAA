class Solution:
    def champagneTower(self, poured: int, query_row: int, query_glass: int) -> float:
        tower = [[0.0 for _ in range(r + 1)] for r in range(101)]
        tower[0][0] = poured
        for r in range(100):
            for c in range(r + 1):
                excess = (tower[r][c] - 1.0) / 2.0
                if excess > 0:
                    tower[r + 1][c] += excess
                    tower[r + 1][c + 1] += excess
        return min(1, tower[query_row][query_glass])
