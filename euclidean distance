import math

def euclidean_distance(p1, p2):
    """
    Calculate the Euclidean distance between two points.

    Args:
        p1 (tuple): The first point, represented as a tuple of two floats.
        p2 (tuple): The second point, represented as a tuple of two floats.

    Returns:
        float: The Euclidean distance between the two points.
    """
    return math.sqrt((p1[0] - p2[0])**2 + (p1[1] - p2[1])**2)

def brute_force_closest_pair(points):
    """
    Find the closest pair of points in a given set using the brute force approach.

    Args:
        points (list): A list of points, where each point is a tuple of two floats.

    Returns:
        tuple: The closest pair of points.
    """
    min_distance = float('inf')
    closest_pair = None
    for i in range(len(points)):
        for j in range(i + 1, len(points)):
            dist = euclidean_distance(points[i], points[j])
            if dist < min_distance:
                min_distance = dist
                closest_pair = (points[i], points[j])
    return closest_pair
points = [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)]
closest_pair = brute_force_closest_pair(points)
print("Closest pair:", closest_pair)
