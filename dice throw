def num_ways_to_target(num_sides, num_dice, target):
    """
    Compute the number of ways to reach a target sum by throwing num_dice dice with num_sides sides each.
    Args:
        num_sides (int): The number of sides on a die.
        num_dice (int): The number of dice to throw.
        target (int): The target sum.
    Returns:
        int: The number of ways to reach the target sum.
    """
    dp = [[0] * (target + 1) for _ in range(num_dice + 1)]
    dp[0][0] = 1
    for i in range(1, num_dice + 1):
        # Iterate over the possible sums
        for j in range(1, target + 1):
            # Iterate over the possible outcomes of the current die
            for k in range(1, num_sides + 1):
                # If the current outcome does not exceed the target sum, add the number of ways to reach the remaining sum
                if j - k >= 0:
                    dp[i][j] += dp[i - 1][j - k]
    return dp[num_dice][target]
num_sides = 6
num_dice = 2
target = 7
print("Number of ways to reach", target, ":", num_ways_to_target(num_sides, num_dice, target))
